<?xml version="1.0" encoding="UTF-8"?>
<!-- status="OFF"，可以去掉，它的含义为是否记录log4j2本身的event信息，默认是OFF -->
<configuration status="Info">
    <!-- 定义下面的引用名 -->
    <Properties>
    	<property name="web_name">microservicecloud-dept</property>
    	<property name="file_path">${web:rootDir}/logs</property>
        <property name="log_pattern">[%d{yyyy-MM-dd HH:mm:ss}] %-5level %class{36} %L %M - %msg%xEx%n</property>
        <property name="every_file_size">300M</property><!-- 日志切割的最小单位 -->
        <property name="output_log_level">debug</property><!-- 日志输出级别 -->
    </Properties>

    <!--先定义所有的appender-->
    <appenders>
        <!--这个输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="${output_log_level}" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--这个是输出日志的格式-->
            <PatternLayout pattern="${log_pattern}"/>
        </Console>
		<!--
			重要的是，如果有多个ThresholdFilter，那么Filters是必须的，同时在Filters中，首先要过滤不符合的日志级别，把不需要的首先DENY掉，然后再ACCEPT需要的日志级别，这个次序不能搞颠倒。
		-->
       	<!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
       	<!-- 按月生成归档日志，可以使用 filePattern="logs/$${date:yyyy-MM}/app-%d{MM-dd-yyyy}-%i.log.gz" -->
        <!-- 显示error级别之外的信息 -->
    	<RollingFile name="rollingInfoFile" fileName="${file_path}/info/${web_name}_info.log" filePattern="${file_path}/info/app-info-%d{yyyy-MM-dd}-%i.log.gz">
            <PatternLayout pattern="${log_pattern}"/>
            <SizeBasedTriggeringPolicy size="${every_file_size}"/>
            <Filters>
            	<!-- 显示info的日志 -->
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>       
            </Filters>
        </RollingFile>
        
        <RollingFile name="rollingErrorFile" fileName="${file_path}/error/${web_name}_error.log" filePattern="${file_path}/error/app-error-%d{yyyy-MM-dd}-%i.log.gz">
            <PatternLayout pattern="${log_pattern}"/>
            <SizeBasedTriggeringPolicy size="${every_file_size}"/>
            <Filters>
            	<!-- 仅接受error日志 -->
                <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
        </RollingFile>
    </appenders>
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
         <logger name="org.springframework" level="INFO"></logger>
         <logger name="org.mybatis" level="INFO"></logger>
	    <!--建立一个默认的root的logger，需要在root的level中指定输出的级别，-->
	    <root level="${output_log_level}">
	        <appender-ref ref="rollingInfoFile"/>
	        <appender-ref ref="rollingErrorFile"/>
	        <appender-ref ref="Console"/>
	    </root>
    </loggers>
</configuration>